---
import type { CollectionEntry } from 'astro:content';
import Header from '../components/Header.astro';
import Stripe from '../components/Stripe.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

import '../css/global.css'
import '../css/blog.css'
import '../css/post.css'

import CookieConsentBanner from '../components/CookieConsentBanner.astro';

import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

interface ScrollRevealObject {
    reveal: (selector: string, options?: any) => void;
}

declare global {
  function ScrollReveal(): ScrollRevealObject;
}
---

<!DOCTYPE html>

<script is:inline src="/js/scrollreveal.min.js"></script>

<script>
    ScrollReveal().reveal('article .content p, article blockquote, article code, article ul, article ol, article h2, article h3, article h4, article h5, article h6', {
        distance: '1rem',
    	origin: 'left',
        opacity: 0,
        duration:600,
        easing: 'ease-out',
		delay:250,
		interval:120,
		viewOffset: {
			top: 200,
			bottom: 200,
		},
    });
</script>

<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description ? description : SITE_DESCRIPTION}>
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/png" href="/favicon.ico" />

		<meta name="generator" content={Astro.generator} />
		<title>{title ? title : SITE_TITLE}</title>
	</head>

	<body>
		<Stripe></Stripe>
		<Header></Header>
		<main>
			<div class="ctnr">
				<a href="/blog/" class="back">Return Blog</a>
			</div>
			
			{heroImage && <img width={720} height={360} src={heroImage} alt={description} class="hero" />}
			<article>

				<div class="heading_ctnr">
					<span class="ai_disclaimer">I’m Fabian, I’m better at cleaning floors than writing content, <b>so I get AI to write mine</b>.</span>
	
					<FormattedDate date={pubDate} />
	
					<h1 class="title">{title}</h1>

					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
					<hr />
				</div>
				<slot />
			</article>
		</main>

		<CookieConsentBanner></CookieConsentBanner>
		<Stripe></Stripe>
	</body>
</html>
